version: '3.8'
services:
# database 
  postgres:
    image: postgres:16
    container_name: shahkar-postgres1.2
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data

# celery massage broker
  redis:
    image: redis:alpine


# app
  django:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgres://username:1234@postgres:5432/postgres
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - .:/app

# kafka dependency
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

# kafka
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
    depends_on:
      - zookeeper

# web ui for kafka

  kafka-manager:
    image: kafka-manager:latest
    environment:
      KM_VERSION: "latest"
      KM_ARGS: "-Dconfig.file=/etc/kafka-manager/application.conf"
      ZK_HOSTS: "zookeeper:2181"
      KAFKA_MANAGER_USERNAME: "admin"
      KAFKA_MANAGER_PASSWORD: "admin"
    ports:
      - "9000:9000"
    depends_on:
      - zookeeper


# queue
  celery:
    build: . 
    image: celery
    container_name: celery_worker
    command: celery --app shahkar_sample worker --pool=prefork --concurrency=8 -E
    environment:
      - DATABASE_URL=postgres://username:1234@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - django
      - redis

# streaming

  spark-master:
    image: spark_image
    container_name: shahkar_spark-master
    environment:
      - SPARK_MODE=master

    ports:
      - "7077:7077"  
      - "8082:8080"  
    volumes:
      - .:/app
 

# streaming worker 

  spark-worker:
    image: spark_image
    container_name: shahkar_spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077  

    ports:
      - 8083:8081
    depends_on:
      - spark-master
    volumes:
      - .:/app




volumes:
  postgres_data:

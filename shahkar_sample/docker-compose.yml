version: '3.8'
services:
# database 
  postgres:
    image: postgres:16
    container_name: shahkar-postgres1.2
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=postgres
    ports:
      - "5433:5432"  
    volumes:
      - postgres_data:/var/lib/postgresql/data

# celery massage broker
  redis:
    image: redis:alpine


# app
  django:
    build: .
    container_name: django_app
    command: python manage.py runserver 0.0.0.0:8000
    environment:
      - DATABASE_URL=postgres://username:1234@postgres:5432/postgres
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - .:/app

# kafka dependency
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

# kafka
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE 
    depends_on:
      - zookeeper

# # web ui for kafka  

#   kafka-manager:
#     image: harness/kafka-manager:latest
#     environment:
#       ZK_HOSTS: zookeeper:2181
#       KM_VERSION: 1.0.0
#       KM_USER: admin
#       KM_PASSWORD: admin
#     ports:
#       - "9000:9000"
#     depends_on:
#       - kafka


# queue
  celery:
    build: . 
    image: celery
    container_name: celery_worker
    command: celery --app shahkar_sample worker --pool=prefork --concurrency=8 -E
    environment:
      - DATABASE_URL=postgres://username:1234@db:5432/postgres
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - django
      - redis

# streaming

  spark-master:
    image: spark_image
    container_name: shahkar_spark-master
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"  
      - "8082:8080"  
    volumes:
      - .:/app
 

# streaming worker 

  spark-worker:
    image: spark_image
    container_name: shahkar_spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077  
    ports:
      - 8083:8081
    depends_on:
      - spark-master
    volumes:
      - .:/app



  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'


  influxdb:
    image: influxdb:latest
    ports:
    - "8086:8086"
    environment:
      INFLUXDB_DB: mydb
      INFLUXDB_ADMIN_USER: admin
      INFLUXDB_ADMIN_PASSWORD: admin
      INFLUXDB_USER: root
      INFLUXDB_USER_PASSWORD: 12345678


  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
    - "3000:3000"
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin 
    depends_on:
    - influxdb



volumes:
  postgres_data:
